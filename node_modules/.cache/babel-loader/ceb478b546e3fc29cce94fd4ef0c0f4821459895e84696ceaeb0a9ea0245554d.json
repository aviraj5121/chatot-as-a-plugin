{"ast":null,"code":"var _jsxFileName = \"D:\\\\capstone\\\\chatbot\\\\src\\\\chatButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  function handleNewUserMessage(message) {\n    setConversation([...conversation, {\n      text: message,\n      user: true\n    }]);\n    // Here you can add code to handle the chatbot's response to the user's message\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: conversation.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [msg.user ? \"User: \" : \"Chatbot: \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleNewUserMessage(\"Hello!\"),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"mvdmuE4zL0FFczYNHcFQbcz6x5c=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","conversation","setConversation","handleNewUserMessage","message","text","user","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/capstone/chatbot/src/chatButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Chatbot() {\r\n  const [conversation, setConversation] = useState([]);\r\n\r\n  function handleNewUserMessage(message) {\r\n    setConversation([...conversation, { text: message, user: true }]);\r\n    // Here you can add code to handle the chatbot's response to the user's message\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chatbot</h1>\r\n      <div>\r\n        {conversation.map((msg, i) => (\r\n          <div key={i}>\r\n            {msg.user ? \"User: \" : \"Chatbot: \"}\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input type=\"text\" placeholder=\"Type your message\" />\r\n      <button onClick={() => handleNewUserMessage(\"Hello!\")}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAASO,oBAAoBA,CAACC,OAAO,EAAE;IACrCF,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;MAAEI,IAAI,EAAED,OAAO;MAAEE,IAAI,EAAE;IAAK,CAAC,CAAC,CAAC;IACjE;EACF;;EAEA,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChBb,OAAA;MAAAS,QAAA,EACGN,YAAY,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACvBhB,OAAA;QAAAS,QAAA,GACGM,GAAG,CAACP,IAAI,GAAG,QAAQ,GAAG,WAAW,EACjCO,GAAG,CAACR,IAAI;MAAA,GAFDS,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNb,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAmB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrDb,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAAC,QAAQ,CAAE;MAAAI,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEV;AAACX,EAAA,CAvBQD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAyBhB,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}